{"version":3,"sources":["../src/node/cli.ts","../src/node/server/index.ts"],"sourcesContent":["import cac from \"cac\";\r\nimport {startDevServer} from './server'\r\nconst cli = cac();\r\n\r\n// [] 中的内容为可选参数，也就是说仅输入 `vite` 命令下会执行下面的逻辑\r\ncli\r\n  .command(\"[root]\", \"Run the development server\")\r\n  .alias(\"serve\")\r\n  .alias(\"dev\")\r\n  .action(async () => {\r\n    console.log('测试 cli~');\r\n    await startDevServer();\r\n  });\r\n\r\ncli.help();\r\n\r\ncli.parse();","// connect 是一个具有中间件机制的轻量级 Node.js 框架。\r\n// 既可以单独作为服务器，也可以接入到任何具有中间件机制的框架中，如 Koa、Express\r\nimport connect from \"connect\";\r\n// picocolors 是一个用来在命令行显示不同颜色文本的工具\r\nimport { blue, green } from \"picocolors\";\r\n\r\nexport async function startDevServer() {\r\n  const app = connect();\r\n  const root = process.cwd();\r\n  const startTime = Date.now();\r\n  app.listen(3000, async () => {\r\n    console.log(\r\n      green(\"🚀 No-Bundle 服务已经成功启动!\"),\r\n      `耗时: ${Date.now() - startTime}ms`\r\n    );\r\n    console.log(`> 本地访问路径: ${blue(\"http://localhost:3000\")}`);\r\n  });\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAAgB;;;ACEhB,qBAAoB;AAEpB,wBAA4B;AAE5B,eAAsB,iBAAiB;AACrC,QAAM,UAAM,eAAAA,SAAQ;AACpB,QAAM,OAAO,QAAQ,IAAI;AACzB,QAAM,YAAY,KAAK,IAAI;AAC3B,MAAI,OAAO,KAAM,YAAY;AAC3B,YAAQ;AAAA,UACN,yBAAM,uEAAwB;AAAA,MAC9B,iBAAO,KAAK,IAAI,IAAI;AAAA,IACtB;AACA,YAAQ,IAAI,+CAAa,wBAAK,uBAAuB,GAAG;AAAA,EAC1D,CAAC;AACH;;;ADfA,IAAM,UAAM,WAAAC,SAAI;AAGhB,IACG,QAAQ,UAAU,4BAA4B,EAC9C,MAAM,OAAO,EACb,MAAM,KAAK,EACX,OAAO,YAAY;AAClB,UAAQ,IAAI,mBAAS;AACrB,QAAM,eAAe;AACvB,CAAC;AAEH,IAAI,KAAK;AAET,IAAI,MAAM;","names":["connect","cac"]}