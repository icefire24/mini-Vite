{"version":3,"sources":["../src/node/cli.ts","../src/node/server/index.ts","../src/node/optimizer/index.ts","../src/node/optimizer/constants.ts","../src/node/optimizer/scanPlugin.ts","../src/node/optimizer/preBundlePlugin.ts","../src/node/utils.ts"],"sourcesContent":["import cac from \"cac\";\r\nimport {startDevServer} from './server'\r\nconst cli = cac();\r\n\r\n// [] ‰∏≠ÁöÑÂÜÖÂÆπ‰∏∫ÂèØÈÄâÂèÇÊï∞Ôºå‰πüÂ∞±ÊòØËØ¥‰ªÖËæìÂÖ• `vite` ÂëΩ‰ª§‰∏ã‰ºöÊâßË°å‰∏ãÈù¢ÁöÑÈÄªËæë\r\ncli\r\n  .command(\"[root]\", \"Run the development server\")\r\n  .alias(\"serve\")\r\n  .alias(\"dev\")\r\n  .action(async () => {\r\n    console.log('ÊµãËØï cli~');\r\n    await startDevServer();\r\n  });\r\n\r\ncli.help();\r\n\r\ncli.parse();","// connect ÊòØ‰∏Ä‰∏™ÂÖ∑Êúâ‰∏≠Èó¥‰ª∂Êú∫Âà∂ÁöÑËΩªÈáèÁ∫ß Node.js Ê°ÜÊû∂„ÄÇ\r\n// Êó¢ÂèØ‰ª•ÂçïÁã¨‰Ωú‰∏∫ÊúçÂä°Âô®Ôºå‰πüÂèØ‰ª•Êé•ÂÖ•Âà∞‰ªª‰ΩïÂÖ∑Êúâ‰∏≠Èó¥‰ª∂Êú∫Âà∂ÁöÑÊ°ÜÊû∂‰∏≠ÔºåÂ¶Ç Koa„ÄÅExpress\r\nimport connect from \"connect\";\r\n// picocolors ÊòØ‰∏Ä‰∏™Áî®Êù•Âú®ÂëΩ‰ª§Ë°åÊòæÁ§∫‰∏çÂêåÈ¢úËâ≤ÊñáÊú¨ÁöÑÂ∑•ÂÖ∑\r\nimport { blue, green } from \"picocolors\";\r\nimport {optimize} from '../optimizer/index'\r\nexport async function startDevServer() {\r\n  const app = connect();\r\n  const root = process.cwd();\r\n  const startTime = Date.now();\r\n  app.listen(3000, async () => {\r\n    await optimize(root);\r\n    console.log(\r\n      green(\"üöÄ No-Bundle ÊúçÂä°Â∑≤ÁªèÊàêÂäüÂêØÂä®!\"),\r\n      `ËÄóÊó∂: ${Date.now() - startTime}ms`\r\n    );\r\n    console.log(`> Êú¨Âú∞ËÆøÈóÆË∑ØÂæÑ: ${blue(\"http://localhost:3000\")}`);\r\n  });\r\n}","import path from 'path'\r\nimport { build } from 'esbuild'\r\nimport { green } from 'picocolors'\r\nimport { scanPlugin } from './scanPlugin'\r\nimport { preBundlePlugin } from './preBundlePlugin'\r\nimport { PRE_BUNDLE_DIR } from './constants'\r\nexport async function optimize(root: string) {\r\n  // 1. Á°ÆÂÆöÂÖ•Âè£\r\n  const entry = path.resolve(root, 'src/main.tsx')\r\n  console.log('entry: ', entry)\r\n  // 2. ‰ªéÂÖ•Âè£Â§ÑÊâ´Êèè‰æùËµñ\r\n  const deps = new Set<string>()\r\n  await build({\r\n    entryPoints: [entry],\r\n    bundle: true,\r\n    write: false,\r\n    plugins: [scanPlugin(deps)],\r\n  })\r\n  console.log(\r\n    `${green('ÈúÄË¶ÅÈ¢ÑÊûÑÂª∫ÁöÑ‰æùËµñ')}:\\n${[...deps]\r\n      .map(green)\r\n      .map((item) => `  ${item}`)\r\n      .join('\\n')}`\r\n  )\r\n  // 3. È¢ÑÊûÑÂª∫‰æùËµñ\r\n  await build({\r\n    entryPoints: [...deps],\r\n    write: true,\r\n    bundle: true,\r\n    format: 'esm',\r\n    splitting: true,\r\n    outdir: path.resolve(root, PRE_BUNDLE_DIR),\r\n    plugins: [preBundlePlugin(deps)],\r\n  })\r\n}\r\n","import  path from 'path'\r\n\r\nexport const EXTERNAL_TYPES = [\r\n    \"css\",\r\n    \"less\",\r\n    \"sass\",\r\n    \"scss\",\r\n    \"styl\",\r\n    \"stylus\",\r\n    \"pcss\",\r\n    \"postcss\",\r\n    \"vue\",\r\n    \"svelte\",\r\n    \"marko\",\r\n    \"astro\",\r\n    \"png\",\r\n    \"jpe?g\",\r\n    \"gif\",\r\n    \"svg\",\r\n    \"ico\",\r\n    \"webp\",\r\n    \"avif\",\r\n  ];\r\n  \r\n  export const BARE_IMPORT_RE = /^[\\w@][^:]/;\r\n\r\n\r\n// È¢ÑÊûÑÂª∫‰∫ßÁâ©ÈªòËÆ§Â≠òÊîæÂú® node_modules ‰∏≠ÁöÑ .m-vite ÁõÆÂΩï‰∏≠\r\nexport const PRE_BUNDLE_DIR = path.join(\"node_modules\", \".m-vite\");","import { Plugin } from 'esbuild'\r\nimport { BARE_IMPORT_RE, EXTERNAL_TYPES } from './constants'\r\nexport function scanPlugin(deps: Set<string>): Plugin {\r\n  console.log('scanPlugin')\r\n\r\n  return {\r\n    name: 'scanPlugin',\r\n    setup(build) {\r\n      build.onResolve(\r\n        { filter: new RegExp(`\\\\.(${EXTERNAL_TYPES.join('|')})$`) }, //Â∞ÜexternalTypes‰∏≠ÁöÑÁ±ªÂûãÂÖ®ÈÉ®ËøáÊª§Ôºå‰∏çÁªèËøáesbuildÁöÑËß£Êûê,external:true\r\n        (args) => {\r\n          return { path: args.path, external: true }\r\n        }\r\n      )\r\n      build.onResolve(\r\n        { filter: BARE_IMPORT_RE }, //Â∞Ü‰ª•@ÊàñËÄÖÂ≠óÊØçÂºÄÂ§¥ÁöÑÂåÖÂêçËøáÊª§\r\n        (args) => {\r\n          console.log(args.path)\r\n\r\n          deps.add(args.path) //Â∞Ü‰æùËµñnpmÂåÖÂêçÂä†ÂÖ•Âà∞deps‰∏≠\r\n          return { path: args.path, external: true }\r\n        }\r\n      )\r\n    },\r\n  }\r\n}\r\n","import { Loader, Plugin } from \"esbuild\";\r\nimport { BARE_IMPORT_RE } from \"./constants\";\r\n// Áî®Êù•ÂàÜÊûê es Ê®°Âùó import/export ËØ≠Âè•ÁöÑÂ∫ì\r\nimport { init, parse } from \"es-module-lexer\";\r\nimport path from \"path\";\r\n// ‰∏Ä‰∏™ÂÆûÁé∞‰∫Ü node Ë∑ØÂæÑËß£ÊûêÁÆóÊ≥ïÁöÑÂ∫ì\r\nimport resolve from \"resolve\";\r\n// ‰∏Ä‰∏™Êõ¥Âä†Â•ΩÁî®ÁöÑÊñá‰ª∂Êìç‰ΩúÂ∫ì\r\nimport fs from \"fs-extra\";\r\n// Áî®Êù•ÂºÄÂèëÊâìÂç∞ debug Êó•ÂøóÁöÑÂ∫ì\r\nimport createDebug from \"debug\";\r\nimport { normalizePath } from \"../utils\";\r\n\r\nconst debug = createDebug(\"dev\");\r\n\r\nexport function preBundlePlugin(deps: Set<string>): Plugin {\r\n  return {\r\n    name: \"esbuild:pre-bundle\",\r\n    setup(build) {\r\n      build.onResolve(\r\n        {\r\n          filter: BARE_IMPORT_RE,\r\n        },\r\n        (resolveInfo) => {\r\n          const { path: id, importer } = resolveInfo;\r\n          const isEntry = !importer;\r\n          // ÂëΩ‰∏≠ÈúÄË¶ÅÈ¢ÑÁºñËØëÁöÑ‰æùËµñ\r\n          if (deps.has(id)) {\r\n            // Ëã•‰∏∫ÂÖ•Âè£ÔºåÂàôÊ†áËÆ∞ dep ÁöÑ namespace\r\n            return isEntry\r\n              ? {\r\n                  path: id,\r\n                  namespace: \"dep\",\r\n                }\r\n              : {\r\n                  // Âõ†‰∏∫Ëµ∞Âà∞ onResolve ‰∫ÜÔºåÊâÄ‰ª•ËøôÈáåÁöÑ path Â∞±ÊòØÁªùÂØπË∑ØÂæÑ‰∫Ü\r\n                  path: resolve.sync(id, { basedir: process.cwd() }),\r\n                };\r\n          }\r\n        }\r\n      );\r\n\r\n      // ÊãøÂà∞Ê†áËÆ∞ÂêéÁöÑ‰æùËµñÔºåÊûÑÈÄ†‰ª£ÁêÜÊ®°ÂùóÔºå‰∫§Áªô esbuild ÊâìÂåÖ\r\n      build.onLoad(\r\n        {\r\n          filter: /.*/,\r\n          namespace: \"dep\",\r\n        },\r\n        async (loadInfo) => {\r\n          await init;\r\n          const id = loadInfo.path;\r\n          const root = process.cwd();\r\n          const entryPath = normalizePath(resolve.sync(id, { basedir: root }));\r\n          const code = await fs.readFile(entryPath, \"utf-8\");\r\n          const [imports, exports] = await parse(code);\r\n          let proxyModule = [];\r\n          // cjs\r\n          if (!imports.length && !exports.length) {\r\n            // ÊûÑÈÄ†‰ª£ÁêÜÊ®°Âùó\r\n            // ‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÂêéÈù¢‰ºöËß£Èáä\r\n            const res = require(entryPath);\r\n            const specifiers = Object.keys(res);\r\n            proxyModule.push(\r\n              `export { ${specifiers.join(\",\")} } from \"${entryPath}\"`,\r\n              `export default require(\"${entryPath}\")`\r\n            );\r\n          } else {\r\n            // esm Ê†ºÂºèÊØîËæÉÂ•ΩÂ§ÑÁêÜÔºåexport * ÊàñËÄÖ export default Âç≥ÂèØ\r\n            if (exports.includes(\"default\")) {\r\n              proxyModule.push(`import d from \"${entryPath}\";export default d`);\r\n            }\r\n            proxyModule.push(`export * from \"${entryPath}\"`);\r\n          }\r\n          debug(\"‰ª£ÁêÜÊ®°ÂùóÂÜÖÂÆπ: %o\", proxyModule.join(\"\\n\"));\r\n          const loader = path.extname(entryPath).slice(1);\r\n          return {\r\n            loader: loader as Loader,\r\n            contents: proxyModule.join(\"\\n\"),\r\n            resolveDir: root,\r\n          };\r\n        }\r\n      );\r\n    },\r\n  };\r\n}","import os from \"os\";\r\nimport path from 'path'\r\n\r\nexport function slash(p: string): string {\r\n  return p.replace(/\\\\/g, \"/\");\r\n}\r\n\r\nexport const isWindows = os.platform() === \"win32\";\r\n\r\n\r\nexport function normalizePath(id: string): string {\r\n  return path.posix.normalize(isWindows ? slash(id) : id);\r\n}"],"mappings":"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","names":["import_picocolors","import_path","path","build","import_path","import_path","os","path","createDebug","build","resolve","fs","path","path","connect","cac"]}